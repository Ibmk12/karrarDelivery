openapi: 3.0.3
info:
  title: Karrar Delivery API
  version: 1.0.0
  description: Auto-generated OpenAPI spec from Postman collection
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /api/v1/orders:
    post:
      summary: Create Order
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            example:
              invoiceNo: INV-001
      responses:
        '200':
          description: Successful Response
    get:
      summary: Get All Orders (with filters)
      tags: [Orders]
      parameters:
        - name: deliveryStatus
          in: query
          schema: { type: string }
        - name: deliveryAgent
          in: query
          schema: { type: string }
        - name: invoiceNo
          in: query
          schema: { type: string }
        - name: customerPhoneNo
          in: query
          schema: { type: string }
        - name: address
          in: query
          schema: { type: string }
        - name: traderName
          in: query
          schema: { type: string }
        - name: traderPhoneNumber
          in: query
          schema: { type: string }
        - name: email
          in: query
          schema: { type: string }
        - name: fromOrderDate
          in: query
          schema: { type: string }
        - name: toOrderDate
          in: query
          schema: { type: string }
        - name: fromDeliveryDate
          in: query
          schema: { type: string }
        - name: toDeliveryDate
          in: query
          schema: { type: string }
        - name: fromLastUpdated
          in: query
          schema: { type: string }
        - name: toLastUpdated
          in: query
          schema: { type: string }
        - name: fromTotalAmount
          in: query
          schema: { type: string }
        - name: toTotalAmount
          in: query
          schema: { type: string }
        - name: fromTraderAmount
          in: query
          schema: { type: string }
        - name: toTraderAmount
          in: query
          schema: { type: string }
        - name: fromDeliveryAmount
          in: query
          schema: { type: string }
        - name: toDeliveryAmount
          in: query
          schema: { type: string }
        - name: fromAgentAmount
          in: query
          schema: { type: string }
        - name: toAgentAmount
          in: query
          schema: { type: string }
        - name: fromNetCompanyAmount
          in: query
          schema: { type: string }
        - name: toNetCompanyAmount
          in: query
          schema: { type: string }
      responses:
        '200':
          description: Successful Response
    patch:
      summary: Patch Orders Status
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderList:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
              example:
                orderList: [1, 2]
                status: DELIVERED
      responses:
        '200':
          description: Successful Response

  /api/v1/orders/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: integer }
    get:
      summary: Get Order By ID
      tags: [Orders]
      responses:
        '200':
          description: Successful Response
    put:
      summary: Update Order
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            example:
              invoiceNo: UPDATED
      responses:
        '200':
          description: Successful Response
    delete:
      summary: Delete Order
      tags: [Orders]
      responses:
        '200':
          description: Successful Response

  /api/v1/orders/report:
    get:
      summary: Order Report
      tags: [Orders]
      parameters:
        - name: deliveryStatus
          in: query
          schema: { type: string }
        - name: deliveryAgent
          in: query
          schema: { type: string }
        - name: invoiceNo
          in: query
          schema: { type: string }
        - name: customerPhoneNo
          in: query
          schema: { type: string }
        - name: address
          in: query
          schema: { type: string }
        - name: traderName
          in: query
          schema: { type: string }
        - name: traderPhoneNumber
          in: query
          schema: { type: string }
        - name: email
          in: query
          schema: { type: string }
        - name: fromOrderDate
          in: query
          schema: { type: string }
        - name: toOrderDate
          in: query
          schema: { type: string }
        - name: fromDeliveryDate
          in: query
          schema: { type: string }
        - name: toDeliveryDate
          in: query
          schema: { type: string }
        - name: fromLastUpdated
          in: query
          schema: { type: string }
        - name: toLastUpdated
          in: query
          schema: { type: string }
        - name: fromTotalAmount
          in: query
          schema: { type: string }
        - name: toTotalAmount
          in: query
          schema: { type: string }
        - name: fromTraderAmount
          in: query
          schema: { type: string }
        - name: toTraderAmount
          in: query
          schema: { type: string }
        - name: fromDeliveryAmount
          in: query
          schema: { type: string }
        - name: toDeliveryAmount
          in: query
          schema: { type: string }
        - name: fromAgentAmount
          in: query
          schema: { type: string }
        - name: toAgentAmount
          in: query
          schema: { type: string }
        - name: fromNetCompanyAmount
          in: query
          schema: { type: string }
        - name: toNetCompanyAmount
          in: query
          schema: { type: string }
      responses:
        '200':
          description: Successful Response

  /api/v1/orders/report/status:
    get:
      summary: Order Report Per Status
      tags: [Orders]
      parameters:
        - name: deliveryStatus
          in: query
          schema: { type: string }
        - name: deliveryAgent
          in: query
          schema: { type: string }
        - name: invoiceNo
          in: query
          schema: { type: string }
        - name: customerPhoneNo
          in: query
          schema: { type: string }
        - name: address
          in: query
          schema: { type: string }
        - name: traderName
          in: query
          schema: { type: string }
        - name: traderPhoneNumber
          in: query
          schema: { type: string }
        - name: email
          in: query
          schema: { type: string }
        - name: fromOrderDate
          in: query
          schema: { type: string }
        - name: toOrderDate
          in: query
          schema: { type: string }
        - name: fromDeliveryDate
          in: query
          schema: { type: string }
        - name: toDeliveryDate
          in: query
          schema: { type: string }
        - name: fromLastUpdated
          in: query
          schema: { type: string }
        - name: toLastUpdated
          in: query
          schema: { type: string }
        - name: fromTotalAmount
          in: query
          schema: { type: string }
        - name: toTotalAmount
          in: query
          schema: { type: string }
        - name: fromTraderAmount
          in: query
          schema: { type: string }
        - name: toTraderAmount
          in: query
          schema: { type: string }
        - name: fromDeliveryAmount
          in: query
          schema: { type: string }
        - name: toDeliveryAmount
          in: query
          schema: { type: string }
        - name: fromAgentAmount
          in: query
          schema: { type: string }
        - name: toAgentAmount
          in: query
          schema: { type: string }
        - name: fromNetCompanyAmount
          in: query
          schema: { type: string }
        - name: toNetCompanyAmount
          in: query
          schema: { type: string }
      responses:
        '200':
          description: Successful Response

  /api/v1/traders:
    post:
      summary: Create Trader
      tags: [Traders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            example:
              name: Trader
              phoneNumber: '1234567890'
      responses:
        '200':
          description: Successful Response
    get:
      summary: Get All Traders (with filters)
      tags: [Traders]
      parameters:
        - name: name
          in: query
          schema: { type: string }
        - name: phoneNumber
          in: query
          schema: { type: string }
        - name: email
          in: query
          schema: { type: string }
        - name: deleted
          in: query
          schema: { type: string }
      responses:
        '200':
          description: Successful Response

  /api/v1/traders/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: integer }
    get:
      summary: Get Trader By ID
      tags: [Traders]
      responses:
        '200':
          description: Successful Response
    put:
      summary: Update Trader
      tags: [Traders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            example:
              name: Updated Trader
      responses:
        '200':
          description: Successful Response
    delete:
      summary: Delete Trader
      tags: [Traders]
      responses:
        '200':
          description: Successful Response